name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test & Lint (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Debug runner environment
        run: |
          python -V
          pip --version
          pip freeze | wc -l || true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort pylint pytest pytest-cov

      - name: Format (check-only)
        run: |
          # Enforce formatting in CI (do not auto-modify files)
          isort --profile black --check-only .
          black --check .

      - name: Lint
        run: |
          pylint -j 0 src tests

      - name: Ensure OPENAI_API_KEY for tests
        # If you prefer to use a real key, set OPENAI_API_KEY in repository Secrets
        run: |
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "OPENAI_API_KEY=sk-test-ci-placeholder" >> $GITHUB_ENV
          else
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          fi

      - name: Run tests
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov=src --cov-report=xml --cov-report=term-missing

      - name: Show coverage file
        run: |
          echo "Coverage files in workspace:"
          ls -la || true
          test -f coverage.xml && echo "coverage.xml exists" || echo "coverage.xml missing"

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: coverage.xml
